#!/usr/bin/perl

=head1 NAME

check-snmp-cpu - Plugin to check the cpu usage over snmp.

=head1 SYNOPSIS

    check-snmp-cpu [ OPTIONS ]

    check-snmp-cpu --help

=head1 REPORTING BUGS

Please report all bugs to <support(at)bloonix.de>.

=head1 AUTHOR

Jonny Schulz <support(at)bloonix.de>.

=head1 POWERED BY

     _    __ _____ _____ __  __ __ __   __
    | |__|  |     |     |  \|  |__|\  \/  /
    |  . |  |  |  |  |  |      |  | >    <
    |____|__|_____|_____|__|\__|__|/__/\__\

=head1 COPYRIGHT

Copyright (C) 2014 by Jonny Schulz. All rights reserved.

=cut

use strict;
use warnings;
use Bloonix::Plugin;

# --------------------------------------------------
# Plugin options
# --------------------------------------------------

my $plugin = Bloonix::Plugin->new(version => "0.4");

$plugin->example(
    description => "Example to check the CPU usage:",
    arguments => [
        host => "127.0.0.1",
        port => 161,
        community => "public",
        warning => 60,
        critical => 80
    ]
);

$plugin->has_snmp;

$plugin->add_option(
    name => "Warning threshold",
    option => "warning",
    value => "percent",
    value_type => "number",
    description => "Set the the warning threshold for the CPU usage."
);

$plugin->add_option(
    name => "Critical threshold",
    option => "critical",
    value => "percent",
    value_type => "number",
    description => "Set the the critical threshold for the CPU usage."
);

# --------------------------------------------------
# Parse options
# --------------------------------------------------

my $opt = $plugin->parse_options;
my $oid_cpu = "1.3.6.1.2.1.25.3.3.1.2";

# --------------------------------------------------
# SNMP connection
# --------------------------------------------------

my $snmp = $plugin->start_snmp_session;

# --------------------------------------------------
# Load statistics
# --------------------------------------------------

my $stat = { };
my $response = $snmp->get_table($oid_cpu);

if (!defined $response) {
    my $message = "ERROR: ". $snmp->error;
    $snmp->close;
    $plugin->exit(
        status => "UNKNOWN",
        message => $message
    );
}

my @oids = sort keys %$response;
s/^$oid_cpu\.// for @oids;
my $first = shift @oids;
$first = $first > 1 ? $first - 1 : $first;
my $total = 0;
my $count = 0;

foreach my $oid (keys %$response) {
    my $cpu = $oid;
    $cpu =~ s/^$oid_cpu\.//;
    $cpu -= $first;
    $cpu = "cpu$cpu";
    $stat->{$cpu} = $response->{$oid};
    $total += $response->{$oid};
    $count++;
}

$stat->{cpu} = $total > 0 ? int($total/$count) : 0;
$snmp->close;

# --------------------------------------------------
# Check warning and critical
# --------------------------------------------------

my $status  = "OK";
my $message = "total cpu usage $stat->{cpu}%";

if ($opt->{critical} && $stat->{cpu} >= $opt->{critical}) {
    $status = "CRITICAL";
}

if ($status eq "OK" && $opt->{warning} && $stat->{cpu} >= $opt->{warning}) {
    $status = "WARNING";
}

$plugin->exit(
    status => $status,
    message => $message,
    stats => $stat
);
