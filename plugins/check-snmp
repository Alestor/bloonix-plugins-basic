#!/usr/bin/perl

=head1 NAME

check-snmp - Plugin to check a system simple over snmp.

=head1 SYNOPSIS

    check-snmp [ OPTIONS ]

    check-snmp --help

=head1 REPORTING BUGS

Please report all bugs to <support(at)bloonix.de>.

=head1 AUTHOR

Jonny Schulz <support(at)bloonix.de>.

=head1 POWERED BY

     _    __ _____ _____ __  __ __ __   __
    | |__|  |     |     |  \|  |__|\  \/  /
    |  . |  |  |  |  |  |      |  | >    <
    |____|__|_____|_____|__|\__|__|/__/\__\

=head1 COPYRIGHT

Copyright (C) 2009-2014 by Jonny Schulz. All rights reserved.

=cut

use strict;
use warnings;
use Bloonix::Plugin;

# --------------------------------------------------
# Plugin options
# --------------------------------------------------

my $plugin = Bloonix::Plugin->new(version => "0.1");

$plugin->example(
    description => "Example to check if a system is alive:",
    arguments => [
        host => "127.0.0.1",
        port => 161,
        community => "public",
        oid => "1.3.6.1.2.1.1.5.0"
    ]
);

$plugin->has_snmp;

$plugin->add_option(
    name => "The OID to check",
    option => "oid",
    value => "string",
    value_type => "string",
    regex => qr/^[^\s]+\z/,
    default => "1.3.6.1.2.1.1.5.0",
    mandatory => 1,
    description => "The OID to check."
);

$plugin->has_threshold(keys => [ { key => "oid-value" } ]);

$plugin->add_option(
    name => "Check the string with a regular expression",
    option => "match",
    value => "regex",
    value_type => "string",
    description => "A text string that is expected in the SNMP response for the OID that is checked."
);

# --------------------------------------------------
# Parse options
# --------------------------------------------------

my $opt = $plugin->parse_options;

# --------------------------------------------------
# SNMP connection
# --------------------------------------------------

my $snmp = $plugin->start_snmp_session;

# --------------------------------------------------
# Load statistics
# --------------------------------------------------

my $response = $snmp->get_request($opt->{oid});

if (!defined $response) {
    my $message = "ERROR: ". $snmp->error;
    $snmp->close;
    $plugin->exit(
        status => "CRITICAL",
        message => $message
    );
}

$snmp->close;

# --------------------------------------------------
# Check warning and critical
# --------------------------------------------------

my $value = $response->{$opt->{oid}};

if (!defined $value) {
    $plugin->exit(
        status => "UNKNOWN",
        message => "oid $opt->{oid} does not exist"
    );
}

if ($opt->{match} && $value !~ /$opt->{match}/) {
    $plugin->exit(
        status => "CRITICAL",
        message => "string of oid $opt->{oid} does not match"
    );
}

if ($opt->{warning} || $opt->{critical}) {
    my $result = $plugin->check_thresholds(
        stats => { "oid-value" => $value },
        upshot_keys => [ "oid-value" ]
    );

    $plugin->exit(
        status => $result->{status},
        message => $result->{upshot}
    );
}

$plugin->exit(
    status => "OK",
    message => "SNMP OK: $value"
);

