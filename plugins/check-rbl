#!/usr/bin/perl

=head1 NAME

check-rbl - Plugin to check IP or hostnames on RBL.

=head1 SYNOPSIS

    check-rbl [ OPTIONS ]

    check-rbl --help

=head1 REPORTING BUGS

Please report all bugs to <support(at)bloonix.de>.

=head1 AUTHOR

Jonny Schulz <support(at)bloonix.de>.

=head1 POWERED BY

     _    __ _____ _____ __  __ __ __   __
    | |__|  |     |     |  \|  |__|\  \/  /
    |  . |  |  |  |  |  |      |  | >    <
    |____|__|_____|_____|__|\__|__|/__/\__\

=head1 COPYRIGHT

Copyright (C) 2015 by Jonny Schulz. All rights reserved.

=cut

use strict;
use warnings;
use Bloonix::Plugin;

# --------------------------------------------------
# Plugin options
# --------------------------------------------------

my $config_file = "/etc/bloonix/agent/check-rbl.conf";
my $plugin = Bloonix::Plugin->new();

$plugin->version("0.2");
$plugin->flags("mid-check-frequency");

$plugin->example(
    description => [
        "Check if a host or IP address is listet on a blacklist.",
    ],
    arguments => [
        host => "mail.bloonix.de",
        server => "zen.spamhaus.org",
        server => "ix.dnsbl.manitu.net",
        server => "bl.spamcop.net",
        server => "dul.dnsbl.sorbs.net",
        server => "combined.njabl.org",
        server => "fuldom.rfc-ignorant.org",
        server => "blackholes.mail-abuse.org"
    ]
);

$plugin->has_host(
    mandatory => 1,
    description => "The SMTP server to check."
);

$plugin->has_timeout(
    default => 3,
    description => "A timeout in seconds after a DNS request will be aborted."
);

$plugin->add_option(
    name => "Warning threshold",
    option => "warning",
    value => "count",
    value_type => "int",
    default => 0,
    description => "The the number of blacklisting servers to trigger a CRITICAL status."
);

$plugin->add_option(
    name => "Critical threshold",
    option => "critical",
    value => "count",
    value_type => "int",
    default => 1,
    description => "The the number of blacklisting servers to trigger a WARNING status."
);

$plugin->add_option(
    name => "RBL server",
    option => "server",
    value => "server",
    value_type => "string",
    multiple => 1,
    mandatory => 1,
    description => "The RBL server to check. It's possible to configure multiple RBL servers."
);

$plugin->has_debug;

my $opt = $plugin->parse_options;

# --------------------------------------------------
# Check blacklist servers
# --------------------------------------------------

my $ip = $plugin->get_ip_by_hostname(ipv4 => $opt->{host});
my $reverse_ip = join(".", reverse split /\./, $ip);
my $checked = 0;
my (@timeout, @listed);

foreach my $server (@{$opt->{server}}) {
    if ($opt->{debug}) {
        print STDERR "check $reverse_ip.$server\n";
    }

    eval {
        $SIG{__DIE__} = sub { alarm(0) };
        $SIG{ALRM} = sub { die "timeout" };
        alarm($opt->{timeout});
        my $dns_name = $reverse_ip .".". $server;
        my ($name, $aliases, $addrtype, $length, @addrs) = gethostbyname($dns_name);

        if ($opt->{debug}) {
            require Data::Dumper;
            print STDERR Data::Dumper::Dumper({
                name => $name,
                aliases => $aliases,
                addrtype => $addrtype,
                length => $length,
                addrs => \@addrs
            });
        }

        if (defined $name && $name eq $dns_name) {
            my @addr = unpack("C4", $addrs[0]);
            push @listed, "$server($addr[3])";
            if ($opt->{debug}) {
                print STDERR " (listed)\n";
            }
        } elsif ($opt->{debug}) {
            print STDERR " (not listed)\n";
        }

        alarm(0);
    };

    my $err = $@;

    if ($err && $err !~ /^next server/) {
        if ($opt->{debug}) {
            print STDERR " (timed out)\n";
        } elsif ($err !~ /^timeout/) {
            print STDERR $@;
        }
        push @timeout, $server;
    } else {
        $checked++;
    }
}

# --------------------------------------------------
# Check the status
# --------------------------------------------------

my $host = $opt->{host} =~ /^\d+\.\d+\.\d+\.\d+\z/
    ? $opt->{host}
    : "$opt->{host}($ip)";

my $status = "OK";
my $message;

if (@listed) {
    $message = join(" ", "$host is listed on", scalar @listed, "servers");
    $message .= " [". join(", ", @listed) ."]";
} else {
    $message = "$host is not listed";
}

if (@timeout) {
    $message .= " [timed out: ". join(", ", @timeout) ."]";
}

if ($opt->{critical} && @listed >= $opt->{critical}) {
    $status = "CRITICAL";
} elsif ($opt->{warning} && @listed >= $opt->{warning}) {
    $status = "WARNING";
}

$plugin->exit(
    status => $status,
    message => $message
);

__DATA__
bl.spamcop.net
dnsbl.ahbl.org
cbl.abuseat.org
dnsbl.cyberlogic.net
bl.deadbeef.com
spamtrap.drbl.drand.net
spamsources.fabel.dk
0spam.fusionzero.com
mail-abuse.blacklist.jippg.org
korea.services.net
spamguard.leadmon.net
ix.dnsbl.manitu.net
relays.nether.net
no-more-funn.moensted.dk
psbl.surriel.com
dyna.spamrats.com
noptr.spamrats.com
spam.spamrats.com
dnsbl.sorbs.net
spam.dnsbl.sorbs.net
bl.spamcannibal.org
bl.spamcop.net
pbl.spamhaus.org
sbl.spamhaus.org
xbl.spamhaus.org
ubl.unsubscore.com
dnsbl-1.uceprotect.net
dnsbl-2.uceprotect.net
dnsbl-3.uceprotect.net
db.wpbl.info
access.redhawk.org
blacklist.sci.kun.nl
bl.technovision.dk
dnsbl.kempt.net
dnsbl.solid.net
dul.ru
forbidden.icm.edu.pl
hil.habeas.com
rbl.schulte.org
sbl-xbl.spamhaus.org
